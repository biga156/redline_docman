security:
  encoders:
    App\Entity\Users:
      algorithm: auto

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\Users
        property: username
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: lazy
      provider: app_user_provider
      guard:
        authenticators:
          - App\Security\LoginFormAuthenticator
      logout:
        path: app_logout
        # where to redirect after logout
        # target: app_any_route
        target: /
      entry_point: App\Security\AuthenticationEntryPoint
      access_denied_handler: App\Security\AccessDeniedHandler
      
      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication
      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used

  access_control:
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/documents, roles: ROLE_USER_TEMP }
    - { path: ^/documents, roles: ROLE_ADMIN }
    - { path: ^/files, roles: ROLE_USER_TEMP }
    - { path: ^/tags, roles: ROLE_USER_TEMP }
    
    #- { path: ^/profile, roles: ROLE_USER }

  # La partie role_hierarchy contient la hiérarchie des rôles
  # Un USER sera également USER_TEMP
  # Un administrateur sera également USER_TEMP et donc USER

  role_hierarchy:
    ROLE_USER_TEMP: ROLUSER_DELETED
    ROLE_USER: ROLE_USER_TEMP
    ROLE_ADMIN: ROLE_USER
